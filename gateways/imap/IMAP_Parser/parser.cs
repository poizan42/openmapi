
//----------------------------------------------------
// The following code was generated by C# CUP v0.1
// 7/31/2009 3:48:42 PM
//----------------------------------------------------

namespace NMapi.Gateways.IMAP
 {

using System.Diagnostics;
using System.Web.UI;
using System.Text;
using System.IO;
using System;
using System.Collections;
using TUVienna.CS_CUP.Runtime;
using TUVienna.CS_CUP;

/** C# CUP v0.1 generated parser.
  * @version 7/31/2009 3:48:42 PM
  */
public class parser : TUVienna.CS_CUP.Runtime.lr_parser {

  /** Default constructor. */
  public parser():base() {;}

  /** Constructor which sets the default scanner. */
  public parser(TUVienna.CS_CUP.Runtime.Scanner s): base(s) {;}

  /** Production table. */
  protected static readonly short[][] _production_table = 
    unpackFromStrings(new string[] {
    "/000/255/000/002/002/004/000/002/071/002/000/002/003" +
    "/006/000/002/004/003/000/002/004/003/000/002/004/003" +
    "/000/002/004/003/000/002/005/003/000/002/005/003/000" +
    "/002/005/003/000/002/005/003/000/002/072/002/000/002" +
    "/006/005/000/002/073/002/000/002/006/005/000/002/074" +
    "/002/000/002/006/005/000/002/075/002/000/002/006/005" +
    "/000/002/076/002/000/002/006/005/000/002/077/002/000" +
    "/002/006/005/000/002/100/002/000/002/006/005/000/002" +
    "/101/002/000/002/006/005/000/002/102/002/000/002/006" +
    "/005/000/002/103/002/000/002/006/005/000/002/104/002" +
    "/000/002/006/005/000/002/105/002/000/002/007/005/000" +
    "/002/007/003/000/002/007/003/000/002/010/003/000/002" +
    "/010/003/000/002/010/003/000/002/106/002/000/002/010" +
    "/005/000/002/107/002/000/002/010/005/000/002/110/002" +
    "/000/002/010/005/000/002/111/002/000/002/010/005/000" +
    "/002/112/002/000/002/113/002/000/002/010/007/000/002" +
    "/114/002/000/002/115/002/000/002/010/007/000/002/116" +
    "/002/000/002/117/002/000/002/010/007/000/002/120/002" +
    "/000/002/121/002/000/002/010/007/000/002/122/002/000" +
    "/002/123/002/000/002/010/007/000/002/011/007/000/002" +
    "/013/005/000/002/014/003/000/002/012/003/000/002/015" +
    "/003/000/002/016/003/000/002/017/005/000/002/017/005" +
    "/000/002/017/007/000/002/020/005/000/002/124/002/000" +
    "/002/022/006/000/002/021/005/000/002/125/002/000/002" +
    "/024/010/000/002/024/003/000/002/070/005/000/002/070" +
    "/003/000/002/067/003/000/002/067/005/000/002/067/005" +
    "/000/002/067/005/000/002/067/005/000/002/067/007/000" +
    "/002/067/007/000/002/067/005/000/002/067/005/000/002" +
    "/067/003/000/002/063/003/000/002/063/003/000/002/063" +
    "/003/000/002/063/003/000/002/063/003/000/002/063/003" +
    "/000/002/063/003/000/002/063/003/000/002/063/003/000" +
    "/002/063/003/000/002/063/003/000/002/063/003/000/002" +
    "/063/003/000/002/063/003/000/002/063/003/000/002/023" +
    "/005/000/002/025/003/000/002/026/007/000/002/027/007" +
    "/000/002/027/007/000/002/027/010/000/002/027/010/000" +
    "/002/030/003/000/002/031/003/000/002/043/003/000/002" +
    "/043/003/000/002/126/002/000/002/043/010/000/002/043" +
    "/003/000/002/127/002/000/002/043/010/000/002/044/005" +
    "/000/002/044/003/000/002/045/003/000/002/045/003/000" +
    "/002/045/005/000/002/045/005/000/002/045/002/000/002" +
    "/050/003/000/002/130/002/000/002/050/010/000/002/047" +
    "/005/000/002/047/003/000/002/046/003/000/002/051/005" +
    "/000/002/051/003/000/002/052/002/000/002/052/007/000" +
    "/002/056/003/000/002/056/003/000/002/054/003/000/002" +
    "/131/002/000/002/055/005/000/002/057/003/000/002/057" +
    "/003/000/002/057/003/000/002/034/002/000/002/034/004" +
    "/000/002/035/004/000/002/035/005/000/002/036/005/000" +
    "/002/036/003/000/002/037/003/000/002/037/004/000/002" +
    "/064/003/000/002/032/002/000/002/032/004/000/002/033" +
    "/003/000/002/040/003/000/002/041/003/000/002/042/003" +
    "/000/002/042/003/000/002/061/003/000/002/061/003/000" +
    "/002/066/005/000/002/066/003/000/002/065/005/000/002" +
    "/065/003/000/002/062/003/000/002/062/003/000/002/053" +
    "/005/000/002/053/003" });

  /** Access to production table. */
  public override short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static readonly short[][] _action_table = 
    unpackFromStrings(new string[] {
    "/000/u0114/000/004/062/004/001/002/000/066/021/000/022" +
    "/000/023/000/024/000/025/000/026/000/027/000/030/000" +
    "/031/000/032/000/033/000/034/000/035/000/036/000/037" +
    "/000/040/000/041/000/042/000/043/000/044/000/045/000" +
    "/046/000/047/000/050/000/051/000/052/000/001/002/000" +
    "/004/002/006/001/002/000/004/002/001/001/002/000/066" +
    "/021/030/022/013/023/037/024/035/025/041/026/032/027" +
    "/010/030/036/031/044/032/011/033/046/034/017/035/016" +
    "/036/040/037/015/040/031/041/033/042/042/043/020/044" +
    "/012/045/024/046/045/047/026/050/043/051/027/052/022" +
    "/001/002/000/012/053/ufff0/054/ufff0/060/ufff0/061/ufff0/001" +
    "/002/000/012/053/uffea/054/uffea/060/uffea/061/uffea/001/002" +
    "/000/004/015/uffda/001/002/000/004/015/ufff9/001/002/000" +
    "/004/015/ufffe/001/002/000/012/053/uffe0/054/uffe0/060/uffe0" +
    "/061/uffe0/001/002/000/012/053/uffe4/054/uffe4/060/uffe4/061" +
    "/uffe4/001/002/000/012/053/uffe6/054/uffe6/060/uffe6/061/uffe6" +
    "/001/002/000/004/015/uffdb/001/002/000/004/015/ufffd/001" +
    "/002/000/004/015/ufff7/001/002/000/004/015/ufffb/001/002" +
    "/000/010/020/uffd9/063/uffd9/064/uffd9/001/002/000/004/015" +
    "/ufffc/001/002/000/010/020/uffd3/063/uffd3/064/uffd3/001/002" +
    "/000/034/020/uffd5/063/uffd5/064/uffd5/100/uffd5/101/uffd5/102" +
    "/uffd5/103/uffd5/104/uffd5/105/uffd5/106/uffd5/107/uffd5/110/uffd5" +
    "/111/uffd5/001/002/000/004/015/ufffa/001/002/000/004/015" +
    "/uffde/001/002/000/012/053/ufff2/054/ufff2/060/ufff2/061/ufff2" +
    "/001/002/000/004/015/uffdd/001/002/000/004/015/361/001" +
    "/002/000/012/053/ufff6/054/ufff6/060/ufff6/061/ufff6/001/002" +
    "/000/012/053/uffee/054/uffee/060/uffee/061/uffee/001/002/000" +
    "/004/015/ufff8/001/002/000/012/053/uffe2/054/uffe2/060/uffe2" +
    "/061/uffe2/001/002/000/012/053/ufff4/054/ufff4/060/ufff4/061" +
    "/ufff4/001/002/000/004/015/uffdc/001/002/000/014/044/uffc5" +
    "/045/uffd1/046/uffce/047/uffc8/051/uffcb/001/002/000/012/053" +
    "/uffec/054/uffec/060/uffec/061/uffec/001/002/000/010/020/uffd7" +
    "/063/uffd7/064/uffd7/001/002/000/012/053/uffe8/054/uffe8/060" +
    "/uffe8/061/uffe8/001/002/000/012/053/052/054/060/060/061" +
    "/061/051/001/002/000/012/005/uff75/014/uff75/015/uff75/112" +
    "/uff75/001/002/000/004/015/uff73/001/002/000/012/005/uff71" +
    "/014/uff71/015/uff71/112/uff71/001/002/000/006/014/uff62/015" +
    "/uff62/001/002/000/004/015/uff96/001/002/000/004/015/uffe7" +
    "/001/002/000/012/005/uff6f/014/uff6f/015/uff6f/112/uff6f/001" +
    "/002/000/012/005/uff76/014/uff76/015/uff76/112/uff76/001/002" +
    "/000/012/005/uff70/014/uff70/015/uff70/112/uff70/001/002/000" +
    "/012/005/uff74/014/uff74/015/uff74/112/uff74/001/002/000/004" +
    "/015/063/001/002/000/012/005/uff72/014/uff72/015/uff72/112" +
    "/uff72/001/002/000/010/020/073/063/072/064/065/001/002" +
    "/000/016/013/uff5d/014/uff5d/015/uff5d/016/uff5d/017/uff5d/112" +
    "/uff5d/001/002/000/014/014/uff57/015/uff57/016/uff57/017/uff57" +
    "/112/uff57/001/002/000/012/014/uff5b/015/uff5b/017/uff5b/112" +
    "/uff5b/001/002/000/006/014/100/017/077/001/002/000/004" +
    "/015/uffd6/001/002/000/016/013/uff5e/014/uff5e/015/uff5e/016" +
    "/uff5e/017/uff5e/112/uff5e/001/002/000/014/014/uff58/015/uff58" +
    "/016/uff58/017/uff58/112/uff58/001/002/000/014/014/uff59/015" +
    "/uff59/016/075/017/uff59/112/uff59/001/002/000/010/020/073" +
    "/063/072/064/065/001/002/000/012/014/uff5a/015/uff5a/017" +
    "/uff5a/112/uff5a/001/002/000/010/020/073/063/072/064/065" +
    "/001/002/000/014/006/106/066/102/067/104/070/105/071" +
    "/103/001/002/000/004/015/uffbb/001/002/000/004/015/uffbc" +
    "/001/002/000/012/005/uff8a/007/uff89/014/uff8a/015/uff8a/001" +
    "/002/000/010/005/uff8e/014/uff8e/015/uff8e/001/002/000/012" +
    "/005/uff8d/007/uff8c/014/uff8d/015/uff8d/001/002/000/010/067" +
    "/104/070/105/071/103/001/002/000/006/005/112/014/111" +
    "/001/002/000/006/005/uff86/014/uff86/001/002/000/010/067" +
    "/104/070/105/071/103/001/002/000/004/015/uffba/001/002" +
    "/000/006/005/uff87/014/uff87/001/002/000/004/007/115/001" +
    "/002/000/012/010/uff81/063/120/072/116/073/117/001/002" +
    "/000/004/010/uff80/001/002/000/004/014/uff7f/001/002/000" +
    "/006/010/uff79/013/uff79/001/002/000/006/010/uff84/013/133" +
    "/001/002/000/004/010/uff85/001/002/000/004/010/124/001" +
    "/002/000/012/005/uff78/011/125/014/uff78/015/uff78/001/002" +
    "/000/006/063/072/064/065/001/002/000/010/005/uff8b/014" +
    "/uff8b/015/uff8b/001/002/000/004/013/130/001/002/000/004" +
    "/063/131/001/002/000/004/012/132/001/002/000/010/005" +
    "/uff77/014/uff77/015/uff77/001/002/000/012/063/136/072/116" +
    "/073/117/074/134/001/002/000/004/010/uff83/001/002/000" +
    "/004/010/uff82/001/002/000/006/010/uff7a/013/uff7a/001/002" +
    "/000/004/014/140/001/002/000/004/006/141/001/002/000" +
    "/012/053/052/054/060/060/061/061/051/001/002/000/006" +
    "/005/uff7b/014/uff7b/001/002/000/006/005/146/014/145/001" +
    "/002/000/006/005/uff7c/014/uff7c/001/002/000/012/053/052" +
    "/054/060/060/061/061/051/001/002/000/004/010/uff7e/001" +
    "/002/000/006/005/uff7d/014/uff7d/001/002/000/004/007/151" +
    "/001/002/000/012/010/uff81/063/120/072/116/073/117/001" +
    "/002/000/004/010/153/001/002/000/012/005/uff78/011/125" +
    "/014/uff78/015/uff78/001/002/000/010/005/uff88/014/uff88/015" +
    "/uff88/001/002/000/012/014/uff5c/015/uff5c/017/uff5c/112/uff5c" +
    "/001/002/000/012/053/052/054/060/060/061/061/051/001" +
    "/002/000/004/015/uffeb/001/002/000/004/014/161/001/002" +
    "/000/014/053/052/054/060/055/163/060/061/061/051/001" +
    "/002/000/004/015/uff60/001/002/000/004/015/uff5f/001/002" +
    "/000/004/015/uffb6/001/002/000/004/045/324/001/002/000" +
    "/004/046/321/001/002/000/004/051/226/001/002/000/004" +
    "/047/176/001/002/000/004/044/172/001/002/000/010/020" +
    "/uffc4/063/uffc4/064/uffc4/001/002/000/010/020/073/063/072" +
    "/064/065/001/002/000/004/015/uffc3/001/002/000/006/015" +
    "/uffc0/017/077/001/002/000/010/020/uffc7/063/uffc7/064/uffc7" +
    "/001/002/000/010/020/073/063/072/064/065/001/002/000" +
    "/006/014/202/017/077/001/002/000/004/015/uffc6/001/002" +
    "/000/006/075/204/076/203/001/002/000/004/075/222/001" +
    "/002/000/004/014/205/001/002/000/010/004/206/006/213" +
    "/053/212/001/002/000/004/053/221/001/002/000/006/014" +
    "/216/015/uff93/001/002/000/004/015/uff94/001/002/000/010" +
    "/005/uff69/014/uff69/015/uff69/001/002/000/010/005/uff68/014" +
    "/uff68/015/uff68/001/002/000/010/004/206/005/215/053/212" +
    "/001/002/000/006/005/217/014/216/001/002/000/006/014" +
    "/uff6c/015/uff6c/001/002/000/006/004/206/053/212/001/002" +
    "/000/006/014/uff6b/015/uff6b/001/002/000/010/005/uff6a/014" +
    "/uff6a/015/uff6a/001/002/000/010/005/uff67/014/uff67/015/uff67" +
    "/001/002/000/004/014/223/001/002/000/010/004/206/006" +
    "/213/053/212/001/002/000/006/014/216/015/uff91/001/002" +
    "/000/004/015/uff92/001/002/000/034/020/uffca/063/uffca/064" +
    "/uffca/100/uffca/101/uffca/102/uffca/103/uffca/104/uffca/105/uffca" +
    "/106/uffca/107/uffca/110/uffca/111/uffca/001/002/000/034/020" +
    "/073/063/072/064/065/100/242/101/231/102/243/103/235" +
    "/104/237/105/234/106/241/107/230/110/232/111/236/001" +
    "/002/000/004/014/315/001/002/000/010/014/uffb0/015/uffb0" +
    "/112/uffb0/001/002/000/004/014/311/001/002/000/004/015" +
    "/uffc9/001/002/000/004/014/307/001/002/000/004/014/305" +
    "/001/002/000/032/020/073/063/072/064/065/101/231/102" +
    "/243/103/235/104/237/105/234/106/241/107/230/110/232" +
    "/111/236/001/002/000/004/014/262/001/002/000/010/014" +
    "/uffb1/015/uffb1/112/uffb1/001/002/000/004/014/260/001/002" +
    "/000/004/014/253/001/002/000/004/014/250/001/002/000" +
    "/006/014/246/015/uffb3/001/002/000/012/014/uffa7/015/uffa7" +
    "/017/077/112/uffa7/001/002/000/032/020/073/063/072/064" +
    "/065/101/231/102/243/103/235/104/237/105/234/106/241" +
    "/107/230/110/232/111/236/001/002/000/010/014/uffb2/015" +
    "/uffb2/112/uffb2/001/002/000/004/056/252/001/002/000/010" +
    "/014/uffaf/015/uffaf/112/uffaf/001/002/000/010/014/uff66/015" +
    "/uff66/112/uff66/001/002/000/012/053/052/054/060/060/061" +
    "/061/051/001/002/000/004/014/uffb5/001/002/000/004/014" +
    "/256/001/002/000/032/020/073/063/072/064/065/101/231" +
    "/102/243/103/235/104/237/105/234/106/241/107/230/110" +
    "/232/111/236/001/002/000/006/014/246/015/uffb4/001/002" +
    "/000/032/020/073/063/072/064/065/101/231/102/243/103" +
    "/235/104/237/105/234/106/241/107/230/110/232/111/236" +
    "/001/002/000/010/014/uffac/015/uffac/112/uffac/001/002/000" +
    "/050/016/277/017/302/020/272/053/052/054/060/060/061" +
    "/061/051/063/072/064/065/101/300/102/275/103/273/104" +
    "/274/105/270/106/276/107/263/110/266/111/267/112/265" +
    "/001/002/000/010/014/uff9e/015/uff9e/112/uff9e/001/002/000" +
    "/010/014/uffa5/015/uffa5/112/uffa5/001/002/000/010/014/uff9b" +
    "/015/uff9b/112/uff9b/001/002/000/010/014/uff9d/015/uff9d/112" +
    "/uff9d/001/002/000/010/014/uff9c/015/uff9c/112/uff9c/001/002" +
    "/000/010/014/uffa0/015/uffa0/112/uffa0/001/002/000/010/014" +
    "/uffad/015/uffad/112/uffad/001/002/000/010/014/uff9a/015/uff9a" +
    "/112/uff9a/001/002/000/010/014/uffa2/015/uffa2/112/uffa2/001" +
    "/002/000/010/014/uffa1/015/uffa1/112/uffa1/001/002/000/010" +
    "/014/uffa3/015/uffa3/112/uffa3/001/002/000/010/014/uff9f/015" +
    "/uff9f/112/uff9f/001/002/000/010/014/uff98/015/uff98/112/uff98" +
    "/001/002/000/010/014/uffa4/015/uffa4/112/uffa4/001/002/000" +
    "/010/014/uffa6/015/uffa6/112/uffa6/001/002/000/010/014/uff99" +
    "/015/uff99/112/uff99/001/002/000/006/014/246/112/304/001" +
    "/002/000/010/014/uffa9/015/uffa9/112/uffa9/001/002/000/006" +
    "/063/072/064/065/001/002/000/010/014/uffae/015/uffae/112" +
    "/uffae/001/002/000/010/020/073/063/072/064/065/001/002" +
    "/000/012/014/uffa8/015/uffa8/017/077/112/uffa8/001/002/000" +
    "/050/016/277/017/302/020/272/053/052/054/060/060/061" +
    "/061/051/063/072/064/065/101/300/102/275/103/273/104" +
    "/274/105/270/106/276/107/263/110/266/111/267/112/265" +
    "/001/002/000/004/014/313/001/002/000/050/016/277/017" +
    "/302/020/272/053/052/054/060/060/061/061/051/063/072" +
    "/064/065/101/300/102/275/103/273/104/274/105/270/106" +
    "/276/107/263/110/266/111/267/112/265/001/002/000/010" +
    "/014/uffab/015/uffab/112/uffab/001/002/000/032/020/073/063" +
    "/072/064/065/101/231/102/243/103/235/104/237/105/234" +
    "/106/241/107/230/110/232/111/236/001/002/000/004/014" +
    "/317/001/002/000/032/020/073/063/072/064/065/101/231" +
    "/102/243/103/235/104/237/105/234/106/241/107/230/110" +
    "/232/111/236/001/002/000/010/014/uffaa/015/uffaa/112/uffaa" +
    "/001/002/000/010/020/uffcd/063/uffcd/064/uffcd/001/002/000" +
    "/010/020/073/063/072/064/065/001/002/000/004/015/uffcc" +
    "/001/002/000/010/020/uffd0/063/uffd0/064/uffd0/001/002/000" +
    "/010/020/073/063/072/064/065/001/002/000/006/014/330" +
    "/017/077/001/002/000/004/015/uffcf/001/002/000/012/053" +
    "/052/054/060/060/061/061/051/001/002/000/004/015/uffc1" +
    "/001/002/000/012/053/052/054/060/060/061/061/051/001" +
    "/002/000/004/015/uffbf/001/002/000/004/015/ufff3/001/002" +
    "/000/012/053/052/054/060/060/061/061/051/001/002/000" +
    "/004/015/uffe1/001/002/000/004/015/uff8f/001/002/000/012" +
    "/053/052/054/060/060/061/061/051/001/002/000/004/014" +
    "/343/001/002/000/004/015/uffed/001/002/000/014/053/052" +
    "/054/060/055/163/060/061/061/051/001/002/000/004/015" +
    "/uffb9/001/002/000/012/053/052/054/060/060/061/061/051" +
    "/001/002/000/004/015/ufff5/001/002/000/004/014/350/001" +
    "/002/000/010/006/213/057/uff6e/061/uff6e/001/002/000/004" +
    "/014/360/001/002/000/006/057/354/061/uff65/001/002/000" +
    "/004/061/051/001/002/000/004/014/uff63/001/002/000/004" +
    "/014/356/001/002/000/004/061/uff64/001/002/000/004/015" +
    "/uffc2/001/002/000/006/057/uff6d/061/uff6d/001/002/000/004" +
    "/002/uffff/001/002/000/012/053/052/054/060/060/061/061" +
    "/051/001/002/000/004/015/ufff1/001/002/000/004/015/uffbe" +
    "/001/002/000/034/020/073/063/072/064/065/100/242/101" +
    "/231/102/243/103/235/104/237/105/234/106/241/107/230" +
    "/110/232/111/236/001/002/000/004/015/uffd4/001/002/000" +
    "/010/020/073/063/072/064/065/001/002/000/004/015/uffd2" +
    "/001/002/000/010/020/073/063/072/064/065/001/002/000" +
    "/004/015/uffd8/001/002/000/012/053/052/054/060/060/061" +
    "/061/051/001/002/000/004/014/376/001/002/000/004/015" +
    "/uffe5/001/002/000/004/006/377/001/002/000/004/077/u0101" +
    "/001/002/000/006/005/u0103/014/u0102/001/002/000/006/005" +
    "/uff55/014/uff55/001/002/000/004/077/u0104/001/002/000/004" +
    "/015/uff95/001/002/000/006/005/uff56/014/uff56/001/002/000" +
    "/012/053/052/054/060/060/061/061/051/001/002/000/004" +
    "/015/uff90/001/002/000/004/015/uffe3/001/002/000/012/053" +
    "/052/054/060/060/061/061/051/001/002/000/004/014/uffb8" +
    "/001/002/000/004/015/uffdf/001/002/000/004/014/u010c/001" +
    "/002/000/012/053/052/054/060/060/061/061/051/001/002" +
    "/000/004/015/uffb7/001/002/000/012/053/052/054/060/060" +
    "/061/061/051/001/002/000/004/015/uffe9/001/002/000/004" +
    "/014/u0111/001/002/000/012/053/052/054/060/060/061/061" +
    "/051/001/002/000/004/015/uff61/001/002/000/004/015/uff97" +
    "/001/002/000/012/053/052/054/060/060/061/061/051/001" +
    "/002/000/004/015/uffef/001/002/000/004/015/uffbd/001/002" +
    "" });

  /** Access to parse-action table. */
  public override short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static readonly short[][] _reduce_table = 
    unpackFromStrings(new string[] {
    "/000/u0114/000/004/003/004/001/001/000/004/071/006/001" +
    "/001/000/002/001/001/000/002/001/001/000/014/004/033" +
    "/005/013/006/020/007/024/010/022/001/001/000/004/075" +
    "/u0113/001/001/000/004/100/u010d/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/004/105/u0107/001" +
    "/001/000/004/103/u0104/001/001/000/004/102/372/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/004/106/370/001/001/000/002/001/001" +
    "/000/004/111/366/001/001/000/004/110/364/001/001/000" +
    "/002/001/001/000/002/001/001/000/004/074/361/001/001" +
    "/000/002/001/001/000/002/001/001/000/004/072/344/001" +
    "/001/000/004/076/337/001/001/000/002/001/001/000/004" +
    "/104/334/001/001/000/004/073/331/001/001/000/002/001" +
    "/001/000/014/112/164/114/165/116/166/120/167/122/170" +
    "/001/001/000/004/077/155/001/001/000/004/107/063/001" +
    "/001/000/004/101/046/001/001/000/016/025/054/040/053" +
    "/054/056/055/047/056/055/057/052/001/001/000/002/001" +
    "/001/000/004/131/061/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/014/017/070/061" +
    "/065/062/073/065/066/066/067/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/006/061/065/062/075/001/001/000/002/001" +
    "/001/000/010/061/065/062/073/065/154/001/001/000/004" +
    "/043/100/001/001/000/002/001/001/000/002/001/001/000" +
    "/004/127/147/001/001/000/002/001/001/000/004/126/113" +
    "/001/001/000/006/043/107/044/106/001/001/000/002/001" +
    "/001/000/002/001/001/000/004/043/112/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/010/045" +
    "/122/050/121/051/120/001/001/000/002/001/001/000/004" +
    "/130/136/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/002/001/001/000/004/052/125/001/001" +
    "/000/004/061/126/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/004/050/134/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/016/046/143/047/142/054/056/055/047/056/055/057" +
    "/141/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/014/046/146/054/056/055/047/056/055/057" +
    "/141/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/010/045/151/050/121/051/120/001/001/000" +
    "/002/001/001/000/004/052/153/001/001/000/002/001/001" +
    "/000/002/001/001/000/016/021/156/040/157/054/056/055" +
    "/047/056/055/057/052/001/001/000/002/001/001/000/002" +
    "/001/001/000/014/042/163/054/056/055/047/056/055/057" +
    "/161/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/004/123/172" +
    "/001/001/000/014/014/173/061/065/062/073/065/066/066" +
    "/174/001/001/000/002/001/001/000/002/001/001/000/004" +
    "/121/176/001/001/000/014/027/200/061/065/062/073/065" +
    "/066/066/177/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/010/035/207/036/206/037/210/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/006/036/213/037/210/001/001/000/002" +
    "/001/001/000/002/001/001/000/004/037/217/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/010/035/224/036/223/037/210/001/001/000" +
    "/002/001/001/000/002/001/001/000/004/117/226/001/001" +
    "/000/020/024/232/061/065/062/073/065/066/066/244/067" +
    "/237/070/243/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/016/061/065/062/073/065/066/066/244" +
    "/067/237/070/302/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/014/061/065/062" +
    "/073/065/066/066/244/067/246/001/001/000/002/001/001" +
    "/000/004/064/250/001/001/000/002/001/001/000/002/001" +
    "/001/000/012/054/056/055/047/056/055/057/253/001/001" +
    "/000/004/125/254/001/001/000/002/001/001/000/016/061" +
    "/065/062/073/065/066/066/244/067/237/070/256/001/001" +
    "/000/002/001/001/000/014/061/065/062/073/065/066/066" +
    "/244/067/260/001/001/000/002/001/001/000/016/054/056" +
    "/055/047/056/055/057/300/061/263/063/270/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/002/001/001/000/002/001/001/000" +
    "/002/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/004/061/305/001/001/000" +
    "/002/001/001/000/012/061/065/062/073/065/066/066/307" +
    "/001/001/000/002/001/001/000/016/054/056/055/047/056" +
    "/055/057/300/061/263/063/311/001/001/000/002/001/001" +
    "/000/016/054/056/055/047/056/055/057/300/061/263/063" +
    "/313/001/001/000/002/001/001/000/014/061/065/062/073" +
    "/065/066/066/244/067/315/001/001/000/002/001/001/000" +
    "/014/061/065/062/073/065/066/066/244/067/317/001/001" +
    "/000/002/001/001/000/004/115/321/001/001/000/014/017" +
    "/322/061/065/062/073/065/066/066/067/001/001/000/002" +
    "/001/001/000/004/113/324/001/001/000/014/013/326/061" +
    "/065/062/073/065/066/066/325/001/001/000/002/001/001" +
    "/000/002/001/001/000/014/040/330/054/056/055/047/056" +
    "/055/057/052/001/001/000/002/001/001/000/016/012/333" +
    "/040/332/054/056/055/047/056/055/057/052/001/001/000" +
    "/002/001/001/000/002/001/001/000/016/031/335/040/336" +
    "/054/056/055/047/056/055/057/052/001/001/000/002/001" +
    "/001/000/002/001/001/000/016/020/341/040/340/054/056" +
    "/055/047/056/055/057/052/001/001/000/002/001/001/000" +
    "/002/001/001/000/014/042/343/054/056/055/047/056/055" +
    "/057/161/001/001/000/002/001/001/000/016/011/345/040" +
    "/346/054/056/055/047/056/055/057/052/001/001/000/002" +
    "/001/001/000/002/001/001/000/006/034/351/035/350/001" +
    "/001/000/002/001/001/000/006/032/352/033/354/001/001" +
    "/000/004/055/356/001/001/000/002/001/001/000/002/001" +
    "/001/000/002/001/001/000/002/001/001/000/002/001/001" +
    "/000/002/001/001/000/016/015/362/040/363/054/056/055" +
    "/047/056/055/057/052/001/001/000/002/001/001/000/002" +
    "/001/001/000/020/024/365/061/065/062/073/065/066/066" +
    "/244/067/237/070/243/001/001/000/002/001/001/000/014" +
    "/027/367/061/065/062/073/065/066/066/177/001/001/000" +
    "/002/001/001/000/014/013/371/061/065/062/073/065/066" +
    "/066/325/001/001/000/002/001/001/000/016/026/374/040" +
    "/373/054/056/055/047/056/055/057/052/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/004/053" +
    "/377/001/001/000/002/001/001/000/002/001/001/000/002" +
    "/001/001/000/002/001/001/000/002/001/001/000/016/030" +
    "/u0106/040/u0105/054/056/055/047/056/055/057/052/001/001" +
    "/000/002/001/001/000/002/001/001/000/014/022/u0109/054" +
    "/056/055/047/056/055/057/u0108/001/001/000/004/124/u010a" +
    "/001/001/000/002/001/001/000/002/001/001/000/012/054" +
    "/056/055/047/056/055/057/u010c/001/001/000/002/001/001" +
    "/000/016/023/u010e/040/u010f/054/056/055/047/056/055/057" +
    "/052/001/001/000/002/001/001/000/002/001/001/000/014" +
    "/041/u0112/054/056/055/047/056/055/057/u0111/001/001/000" +
    "/002/001/001/000/002/001/001/000/016/016/u0114/040/u0115" +
    "/054/056/055/047/056/055/057/052/001/001/000/002/001" +
    "/001/000/002/001/001" });

  /** Access to <code>reduce_goto</code> table. */
  public override short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP_parser_actions action_obj;

  /** Action encapsulation object initializer. */
  protected override void init_actions()
    {
      action_obj = new CUP_parser_actions(this);
    }

  /** Invoke a user supplied parse action. */
  public override TUVienna.CS_CUP.Runtime.Symbol do_action(
    int                        act_num,
    TUVienna.CS_CUP.Runtime.lr_parser parser,
    System.Collections.Stack            xstack1,
    int                        top)
  {
  mStack CUP_parser_stack= new mStack(xstack1);
    /* call code in generated class */
    return action_obj.CUP_parser_do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public override int start_state() {return 0;}
  /** Indicates start production. */
  public override int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public override int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public override int error_sym() {return 1;}



  
  private CommandAnalyserParserInterface parseInt;
  
  /** Constructor which sets the default scanner as well as the ParserInterface. */
  public parser(TUVienna.CS_CUP.Runtime.Scanner s, CommandAnalyserParserInterface parserInterface): base(s) 
  {
  	parseInt = parserInterface;
  }
  
  public CommandAnalyserParserInterface ParseInt {
  	get { return parseInt; }
  }

  public void SetNewInput(StreamReader sr)
  {
  		((Yylex) getScanner()).newReader(sr);
  }


}

/** Cup generated class to encapsulate user supplied action code.*/
public class CUP_parser_actions {


	private byte[] literalByteParkingSpace;
	public byte[] LiteralByteParkingSpace {
		get { return literalByteParkingSpace; }
		set { literalByteParkingSpace = value; }
	}

	private CommandAnalyserParserInterface ParseInt {
		get { return my_parser.ParseInt; }
	}

  private parser my_parser;

  /** Constructor */
  public CUP_parser_actions(parser t_parser) {
    this.my_parser = t_parser;
  }

  /** Method with the actual generated action code. */
  public   TUVienna.CS_CUP.Runtime.Symbol CUP_parser_do_action(
    int                        CUP_parser_act_num,
    TUVienna.CS_CUP.Runtime.lr_parser CUP_parser_parser,
    System.Collections.Stack            xstack1,
    int                        CUP_parser_top)
    {
      /* Symbol object for return from actions */
      mStack CUP_parser_stack =new mStack(xstack1);
      TUVienna.CS_CUP.Runtime.Symbol CUP_parser_result;

      /* select the action based on the action number */
      switch (CUP_parser_act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= command EOF 
            {
              object RESULT = null;
		int start_valleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left;
		int start_valright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).right;
		object start_val = (object)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		RESULT = start_val;
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(0/*$START*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP_parser_parser.done_parsing();
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              object RESULT = null;
		int tleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int tright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string t = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Tag=t; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(55/*NT$0*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // command ::= TAG NT$0 command_detail CRLF 
            {
              object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int tleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left;
		int tright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).right;
		string t = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(1/*command*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // command_detail ::= command_any 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*command_detail*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // command_detail ::= command_auth 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*command_detail*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // command_detail ::= command_nonauth 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*command_detail*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // command_detail ::= command_select 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*command_detail*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // command_any ::= CAPABILITY 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*command_any*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // command_any ::= LOGOUT 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*command_any*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // command_any ::= NOOP 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*command_any*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // command_any ::= X_COMMAND 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*command_any*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NT$1 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(56/*NT$1*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // command_auth ::= APPEND NT$1 cmd_append 
            {
              object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$2 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(57/*NT$2*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // command_auth ::= CREATE NT$2 cmd_create 
            {
              object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NT$3 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(58/*NT$3*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // command_auth ::= DELETE NT$3 cmd_delete 
            {
              object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$4 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(59/*NT$4*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // command_auth ::= EXAMINE NT$4 cmd_examine 
            {
              object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$5 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(60/*NT$5*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // command_auth ::= LIST NT$5 cmd_list 
            {
              object RESULT = null;
              // propagate RESULT from NT$5
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$6 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(61/*NT$6*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // command_auth ::= LSUB NT$6 cmd_lsub 
            {
              object RESULT = null;
              // propagate RESULT from NT$6
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NT$7 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(62/*NT$7*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // command_auth ::= RENAME NT$7 cmd_rename 
            {
              object RESULT = null;
              // propagate RESULT from NT$7
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // NT$8 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(63/*NT$8*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // command_auth ::= SELECT NT$8 cmd_select 
            {
              object RESULT = null;
              // propagate RESULT from NT$8
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$9 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(64/*NT$9*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // command_auth ::= STATUS NT$9 cmd_status 
            {
              object RESULT = null;
              // propagate RESULT from NT$9
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$10 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(65/*NT$10*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // command_auth ::= SUBSCRIBE NT$10 cmd_subscribe 
            {
              object RESULT = null;
              // propagate RESULT from NT$10
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // NT$11 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateAuthenticated () && !ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonauthenticated state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(66/*NT$11*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // command_auth ::= UNSUBSCRIBE NT$11 cmd_unsubscribe 
            {
              object RESULT = null;
              // propagate RESULT from NT$11
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*command_auth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NT$12 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(67/*NT$12*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // command_nonauth ::= LOGIN NT$12 cmd_login 
            {
              object RESULT = null;
              // propagate RESULT from NT$12
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*command_nonauth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // command_nonauth ::= AUTHENTICATE 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*command_nonauth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // command_nonauth ::= STARTTLS 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper(); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*command_nonauth*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // command_select ::= CHECK 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // command_select ::= CLOSE 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // command_select ::= EXPUNGE 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$13 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(68/*NT$13*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // command_select ::= COPY NT$13 cmd_copy 
            {
              object RESULT = null;
              // propagate RESULT from NT$13
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // NT$14 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(69/*NT$14*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // command_select ::= FETCH NT$14 cmd_fetch 
            {
              object RESULT = null;
              // propagate RESULT from NT$14
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // NT$15 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(70/*NT$15*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // command_select ::= SEARCH NT$15 cmd_search 
            {
              object RESULT = null;
              // propagate RESULT from NT$15
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // NT$16 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(71/*NT$16*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // command_select ::= STORE NT$16 cmd_store 
            {
              object RESULT = null;
              // propagate RESULT from NT$16
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // NT$17 ::= 
            {
              object RESULT = null;
 ParseInt.command.UIDCommand=true; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(72/*NT$17*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // NT$18 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(73/*NT$18*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // command_select ::= UID NT$17 COPY NT$18 cmd_copy 
            {
              object RESULT = null;
              // propagate RESULT from NT$17
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
              // propagate RESULT from NT$18
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$19 ::= 
            {
              object RESULT = null;
 ParseInt.command.UIDCommand=true; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(74/*NT$19*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // NT$20 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(75/*NT$20*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // command_select ::= UID NT$19 FETCH NT$20 cmd_fetch 
            {
              object RESULT = null;
              // propagate RESULT from NT$19
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
              // propagate RESULT from NT$20
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // NT$21 ::= 
            {
              object RESULT = null;
 ParseInt.command.UIDCommand=true; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(76/*NT$21*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$22 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(77/*NT$22*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // command_select ::= UID NT$21 SEARCH NT$22 cmd_search 
            {
              object RESULT = null;
              // propagate RESULT from NT$21
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
              // propagate RESULT from NT$22
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // NT$23 ::= 
            {
              object RESULT = null;
 ParseInt.command.UIDCommand=true; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(78/*NT$23*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // NT$24 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(79/*NT$24*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // command_select ::= UID NT$23 STORE NT$24 cmd_store 
            {
              object RESULT = null;
              // propagate RESULT from NT$23
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
              // propagate RESULT from NT$24
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$25 ::= 
            {
              object RESULT = null;
 ParseInt.command.UIDCommand=true; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(80/*NT$25*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // NT$26 ::= 
            {
              object RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
 ParseInt.command.Command_name=n.ToUpper();
	   if (!ParseInt.StateSelected ())
			ParseInt.command.Parse_error = "statement not allowed in nonselected state";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(81/*NT$26*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // command_select ::= UID NT$25 EXPUNGE NT$26 cmd_expunge 
            {
              object RESULT = null;
              // propagate RESULT from NT$25
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
              // propagate RESULT from NT$26
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(6/*command_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // cmd_append ::= mailbox1 SP opt_flag_list opt_date_time literal 
            {
              object RESULT = null;
		int lleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int lright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string l = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Append_literal=LiteralByteParkingSpace; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(7/*cmd_append*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cmd_copy ::= sequence_set SP mailbox1 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		 
		ParseInt.command.Sequence_set = ss;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(9/*cmd_copy*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cmd_expunge ::= sequence_set 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		ParseInt.command.Sequence_set = ss;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(10/*cmd_expunge*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // cmd_create ::= mailbox1 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(8/*cmd_create*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // cmd_delete ::= mailbox1 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(11/*cmd_delete*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cmd_examine ::= mailbox1 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(12/*cmd_examine*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cmd_fetch ::= sequence_set SP FETCH_ARG_PRIM 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		Console.WriteLine("FETCH_ARG_PRIM: "+arg);
		ParseInt.command.Fetch_att1=arg; 
		ParseInt.command.Sequence_set = ss;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(13/*cmd_fetch*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cmd_fetch ::= sequence_set SP fetch_att 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		 
		ParseInt.command.Sequence_set = ss;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(13/*cmd_fetch*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cmd_fetch ::= sequence_set SP LPARENT fetch_att_list RPARENT 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		 
		ParseInt.command.Sequence_set = ss;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(13/*cmd_fetch*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cmd_list ::= mailbox1 SP list_mailbox 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(14/*cmd_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // NT$27 ::= 
            {
              object RESULT = null;
		int uidleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int uidright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string uid = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;

		ParseInt.command.Userid=uid; 
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(82/*NT$27*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // cmd_login ::= astringstring NT$27 SP astringstring 
            {
              object RESULT = null;
              // propagate RESULT from NT$27
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int uidleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left;
		int uidright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).right;
		string uid = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
		int pwleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int pwright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string pw = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		ParseInt.command.Password=pw; 
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(16/*cmd_login*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // cmd_lsub ::= mailbox1 SP list_mailbox 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(15/*cmd_lsub*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // NT$28 ::= 
            {
              object RESULT = null;
		int cleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int cright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string c = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;

		ParseInt.command.Charset=c; 
		Console.WriteLine("charset: "+c); 
		ParseInt.SetEncoding (c);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(83/*NT$28*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // cmd_search ::= CHARSET SP astringstring NT$28 SP search_key_list 
            {
              object RESULT = null;
              // propagate RESULT from NT$28
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int cleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left;
		int cright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).right;
		string c = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
		int sklleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sklright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSearchKeyList skl = (CommandSearchKeyList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		ParseInt.command.Search_key_list = skl;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(18/*cmd_search*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // cmd_search ::= search_key_list 
            {
              object RESULT = null;
		int sklleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sklright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSearchKeyList skl = (CommandSearchKeyList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("cmd_search:search key list");
		ParseInt.command.Search_key_list = skl;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(18/*cmd_search*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // search_key_list ::= search_key_list SP search_key 
            {
              CommandSearchKeyList RESULT = null;
		int sklleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int sklright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		CommandSearchKeyList skl = (CommandSearchKeyList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int skleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int skright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSearchKey sk = (CommandSearchKey)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		RESULT = skl;
		RESULT.Add(sk); 
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(54/*search_key_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // search_key_list ::= search_key 
            {
              CommandSearchKeyList RESULT = null;
		int skleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int skright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSearchKey sk = (CommandSearchKey)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		RESULT = new CommandSearchKeyList ();
		RESULT.Add(sk); 
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(54/*search_key_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // search_key ::= SEARCH_KEYWORD_SOLE 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // search_key ::= SEARCH_KEYWORD_DATE SP date 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int dtleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int dtright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		DateTimeBox dt = (DateTimeBox)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
		if (dt != null)
			RESULT.Date= dt.Value;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // search_key ::= SEARCH_KEYWORD_NUMBER SP number 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
		RESULT.Number=Convert.ToInt32 (n);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // search_key ::= SEARCH_KEYWORD_ASTRING SP search_keyword_or_astring_or_number 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
		RESULT.Astring=s;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // search_key ::= SEARCH_KEYWORD_NOT SP search_key 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int skleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int skright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSearchKey sk = (CommandSearchKey)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
		RESULT.Search_key1=sk;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // search_key ::= SEARCH_KEYWORD_HEADER SP search_keyword_or_astring_or_number SP search_keyword_or_astring_or_number 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int s1left = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int s1right = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string s1 = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int s2left = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int s2right = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s2 = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
		RESULT.Header_fld_name=s1;
		RESULT.Astring=s2;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // search_key ::= SEARCH_KEYWORD_OR SP search_key SP search_key 
            {
              CommandSearchKey RESULT = null;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int sk1left = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int sk1right = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		CommandSearchKey sk1 = (CommandSearchKey)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int sk2left = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sk2right = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSearchKey sk2 = (CommandSearchKey)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("search_keyword or: "+k);
		RESULT = new CommandSearchKey ();
		RESULT.Keyword=k;
		RESULT.Search_key1=sk1;
		RESULT.Search_key2=sk2;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // search_key ::= SEARCH_KEYWORD_LPARENT search_key_list SEARCH_KEYWORD_RPARENT 
            {
              CommandSearchKey RESULT = null;
		int sklleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left;
		int sklright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).right;
		CommandSearchKeyList skl = (CommandSearchKeyList)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		 
		Console.WriteLine("search_keyword param");
		RESULT = new CommandSearchKey ();
		RESULT.Keyword="PARENTHESIS";
		RESULT.Search_key_list = skl;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // search_key ::= SEARCH_KEYWORD_UID SP sequence_set 
            {
              CommandSearchKey RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		RESULT = new CommandSearchKey ();
		RESULT.Keyword="SEQUENCE-SET";
		RESULT.Sequence_set = ss;
		RESULT.UIDSearchKey = true;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // search_key ::= sequence_set 
            {
              CommandSearchKey RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		RESULT = new CommandSearchKey ();
		RESULT.Keyword="SEQUENCE-SET";
		RESULT.Sequence_set = ss;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(53/*search_key*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // search_keyword_or_astring_or_number ::= astringstring 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // search_keyword_or_astring_or_number ::= number 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_SOLE 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_DATE 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_NUMBER 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_ASTRING 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_UID 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_NOT 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_OR 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_HEADER 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_LPARENT 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // search_keyword_or_astring_or_number ::= SEARCH_KEYWORD_RPARENT 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // search_keyword_or_astring_or_number ::= STAR 
            {
              string RESULT = null;
		 RESULT = "*"; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // search_keyword_or_astring_or_number ::= COMMA 
            {
              string RESULT = null;
		 RESULT = ","; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // search_keyword_or_astring_or_number ::= COLON 
            {
              string RESULT = null;
		 RESULT = ":"; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*search_keyword_or_astring_or_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // cmd_rename ::= mailbox1 SP mailbox2 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(17/*cmd_rename*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // cmd_select ::= mailbox1 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(19/*cmd_select*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // cmd_status ::= mailbox1 SP LPARENT status_list RPARENT 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(20/*cmd_status*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // cmd_store ::= sequence_set SP FLAG_KEY SP flag_list 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		 
			Console.WriteLine("flag_key: "+k);
			ParseInt.command.Flag_key=k; 
			ParseInt.command.Sequence_set = ss;
		
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(21/*cmd_store*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // cmd_store ::= sequence_set SP FLAG_KEY SP flag_list_elements 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		 
			Console.WriteLine("flag_key: "+k);
			ParseInt.command.Flag_key=k; 
			ParseInt.command.Sequence_set = ss;
		
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(21/*cmd_store*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // cmd_store ::= sequence_set SP FLAG_SIGN FLAG_KEY SP flag_list 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-5)).value;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		 
			ParseInt.command.Flag_sign=s; Console.WriteLine("flag_sign: "+s); 
			ParseInt.command.Flag_key=k; Console.WriteLine("flag_key: "+k); 
			ParseInt.command.Sequence_set = ss;
		
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(21/*cmd_store*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // cmd_store ::= sequence_set SP FLAG_SIGN FLAG_KEY SP flag_list_elements 
            {
              object RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-5)).value;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
		int kleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int kright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string k = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		
			ParseInt.command.Flag_sign=s; Console.WriteLine("flag_sign: "+s); 
		   	ParseInt.command.Flag_key=k; Console.WriteLine("flag_key: "+k); 
			ParseInt.command.Sequence_set = ss;
		
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(21/*cmd_store*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // cmd_subscribe ::= mailbox1 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(22/*cmd_subscribe*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // cmd_unsubscribe ::= mailbox1 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(23/*cmd_unsubscribe*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // fetch_att ::= FETCH_ATT 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		Console.WriteLine("FETCH_ARG_PRIM: "+arg);
		ParseInt.command.NewFetch_item();
		ParseInt.command.Current_fetch_item.Fetch_att_key=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(33/*fetch_att*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // fetch_att ::= FETCH_ATT_BODY 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		Console.WriteLine("FETCH_ARG_PRIM: "+arg);
		ParseInt.command.NewFetch_item();
		ParseInt.command.Current_fetch_item.Fetch_att_key=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(33/*fetch_att*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // NT$29 ::= 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;

		Console.WriteLine("FETCH_ARG_PRIM: "+arg);
		ParseInt.command.NewFetch_item();
		ParseInt.command.Current_fetch_item.Fetch_att_key=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(84/*NT$29*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // fetch_att ::= FETCH_ATT_BODY NT$29 LBRACK fetch_att_section RBRACK opt_sec_number 
            {
              object RESULT = null;
              // propagate RESULT from NT$29
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-5)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(33/*fetch_att*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // fetch_att ::= FETCH_ATT_BODY_PEEK 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		Console.WriteLine("FETCH_ARG_PRIM: "+arg);
		ParseInt.command.NewFetch_item();
		ParseInt.command.Current_fetch_item.Fetch_att_key=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(33/*fetch_att*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // NT$30 ::= 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;

		Console.WriteLine("FETCH_ARG_PRIM: "+arg);
		ParseInt.command.NewFetch_item();
		ParseInt.command.Current_fetch_item.Fetch_att_key=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(85/*NT$30*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // fetch_att ::= FETCH_ATT_BODY_PEEK NT$30 LBRACK fetch_att_section RBRACK opt_sec_number 
            {
              object RESULT = null;
              // propagate RESULT from NT$30
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-5)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(33/*fetch_att*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // fetch_att_list ::= fetch_att_list SP fetch_att 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(34/*fetch_att_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // fetch_att_list ::= fetch_att 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(34/*fetch_att_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // fetch_att_section ::= section_msgtext 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(35/*fetch_att_section*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // fetch_att_section ::= section_part 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(35/*fetch_att_section*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // fetch_att_section ::= section_part DOT SECTION_TEXT_MIME 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(35/*fetch_att_section*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // fetch_att_section ::= section_part DOT section_msgtext 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(35/*fetch_att_section*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // fetch_att_section ::= 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(35/*fetch_att_section*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // section_msgtext ::= FETCH_MSG_TEXT_SINGLE 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		Console.WriteLine("fetch-msg-text: "+arg);
		ParseInt.command.Current_fetch_item.Section_text=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(38/*section_msgtext*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // NT$31 ::= 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;

		Console.WriteLine("fetch-msg-text: "+arg);
		ParseInt.command.Current_fetch_item.Section_text=arg;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(86/*NT$31*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // section_msgtext ::= FETCH_MSG_TEXT_HEADERLIST_KEY NT$31 SP LPARENT header_elements RPARENT 
            {
              object RESULT = null;
              // propagate RESULT from NT$31
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value != null )
                RESULT = (object) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-4)).value;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-5)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(38/*section_msgtext*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-5)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // header_elements ::= header_elements SP header_element 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(37/*header_elements*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // header_elements ::= header_element 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(37/*header_elements*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // header_element ::= astringstring 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		Console.WriteLine("header-list-element: "+arg);
		ParseInt.command.Current_fetch_item.AddHeader(arg);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(36/*header_element*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // section_part ::= section_part DOT NZ_NUMBER 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("section-part-element: "+arg); 
		ParseInt.command.Current_fetch_item.AddSection_part(arg);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(39/*section_part*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // section_part ::= NZ_NUMBER 
            {
              object RESULT = null;
		int argleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int argright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string arg = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
		Console.WriteLine("section-part-element: "+arg); 
		ParseInt.command.Current_fetch_item.AddSection_part(arg);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(39/*section_part*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // opt_sec_number ::= 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(40/*opt_sec_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // opt_sec_number ::= LESSTHAN number DOT NZ_NUMBER GREATERTHAN 
            {
              object RESULT = null;
		int arglleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).left;
		int arglright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-3)).right;
		string argl = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-3)).value;
		int argrleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left;
		int argrright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).right;
		string argr = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		 
		Console.WriteLine("section-number-left: "+argl);
		ParseInt.command.Current_fetch_item.Section_number1 = argl;
		Console.WriteLine("section-number-right: "+argr); 
		ParseInt.command.Current_fetch_item.Section_number2 = argr;
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(40/*opt_sec_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-4)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // string ::= quoted 
            {
              string RESULT = null;
		int qleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int qright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string q = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = q; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(44/*string*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // string ::= literal 
            {
              string RESULT = null;
		int lleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int lright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string l = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = ParseInt.Encoding.GetString(LiteralByteParkingSpace); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(44/*string*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // quoted ::= QUOTED 
            {
              string RESULT = null;
		int qleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int qright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string q = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
	  RESULT = q.Substring(1,q.Length-2);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(42/*quoted*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // NT$32 ::= 
            {
              object RESULT = null;
		int lleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int lright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string l = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;

	      int count = System.Convert.ToInt32(l.Substring(1,l.Length-2));
	      Console.WriteLine("before literal reading, count: " + count);
		  LiteralByteParkingSpace = ParseInt.ReadLiteral(count);
//	      Console.WriteLine("after literal reading: \"" + ll + "\"");
		  RESULT = "dummy";
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(87/*NT$32*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // literal ::= LITERAL NT$32 CRLF 
            {
              string RESULT = null;
              // propagate RESULT from NT$32
              if ( ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value != null )
                RESULT = (string) ((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;
		int lleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int lright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string l = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(43/*literal*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // astringstring ::= ATOM 
            {
              string RESULT = null;
		int aleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int aright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string a = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = a; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(45/*astringstring*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // astringstring ::= ASTRING 
            {
              string RESULT = null;
		int a1left = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int a1right = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string a1 = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = a1; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(45/*astringstring*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // astringstring ::= string 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = s; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(45/*astringstring*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // opt_flag_list ::= 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(26/*opt_flag_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // opt_flag_list ::= flag_list SP 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(26/*opt_flag_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // flag_list ::= LPARENT RPARENT 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*flag_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // flag_list ::= LPARENT flag_list_elements RPARENT 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(27/*flag_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // flag_list_elements ::= flag_list_elements SP flag_list_element 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*flag_list_elements*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // flag_list_elements ::= flag_list_element 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*flag_list_elements*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // flag_list_element ::= ATOM 
            {
              object RESULT = null;
		int aleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int aright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string a = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.AddFlag(a); Console.WriteLine("Flag: "+a); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(29/*flag_list_element*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // flag_list_element ::= BACKSLASH ATOM 
            {
              object RESULT = null;
		int aleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int aright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string a = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.AddFlag("\\"+a); Console.WriteLine("Flag: \\"+a); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(29/*flag_list_element*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // date ::= DATE 
            {
              DateTimeBox RESULT = null;
		int dtleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int dtright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string dt = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
	  Console.WriteLine("Datestring:" + dt);
      RESULT = new DateTimeBox ();
      try {
		RESULT.Value = DateTime.Parse (dt);
      } finally { }
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(50/*date*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // opt_date_time ::= 
            {
              object RESULT = null;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(24/*opt_date_time*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // opt_date_time ::= date_time SP 
            {
              object RESULT = null;
		int dtleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left;
		int dtright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).right;
		object dt = (object)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-1)).value;

              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(24/*opt_date_time*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-1)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // date_time ::= DATE_TIME 
            {
              object RESULT = null;
		int dtleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int dtright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string dt = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 
	  Console.WriteLine("Datetimestring:" + dt);
	  try {
	  	ParseInt.command.DateTimex = DateTime.Parse(dt.Substring(1,dt.Length-2));
	  } catch {
	  	ParseInt.command.DateTimex = new DateTime ();
	  }
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(25/*date_time*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // mailbox1 ::= astringstring 
            {
              object RESULT = null;
		int mleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int mright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string m = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Mailbox1=m;  
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(30/*mailbox1*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // mailbox2 ::= astringstring 
            {
              object RESULT = null;
		int mleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int mright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string m = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.Mailbox2=m; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(31/*mailbox2*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // list_mailbox ::= astringstring 
            {
              object RESULT = null;
		int mleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int mright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string m = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.List_mailbox=m; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(32/*list_mailbox*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // list_mailbox ::= LIST_MAILBOX 
            {
              object RESULT = null;
		int mleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int mright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string m = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.List_mailbox=m; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(32/*list_mailbox*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // number ::= NZ_NUMBER 
            {
              string RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT=n; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(47/*number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // number ::= NUMBER 
            {
              string RESULT = null;
		int mleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int mright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string m = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT=m; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(47/*number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // sequence_set ::= sequence_set COMMA sequence_range 
            {
              CommandSequenceSet RESULT = null;
		int ssleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int ssright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		CommandSequenceSet ss = (CommandSequenceSet)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int srleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int srright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		Pair sr = (Pair)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		RESULT = ss;
		RESULT.Add (sr);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(52/*sequence_set*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // sequence_set ::= sequence_range 
            {
              CommandSequenceSet RESULT = null;
		int srleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int srright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		Pair sr = (Pair)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		
		RESULT = new CommandSequenceSet();
		RESULT.Add (sr);
	
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(52/*sequence_set*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // sequence_range ::= sequence_number COLON sequence_number 
            {
              Pair RESULT = null;
		int lleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left;
		int lright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).right;
		string l = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-2)).value;
		int rleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int rright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string r = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = new Pair((object) l, (object) r); Console.WriteLine("sequence_range: "+l+":"+r); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(51/*sequence_range*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // sequence_range ::= sequence_number 
            {
              Pair RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT = new Pair((object) n, (object) null); Console.WriteLine("sequence_number: "+n); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(51/*sequence_range*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // sequence_number ::= STAR 
            {
              string RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		object s = (object)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT="*"; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(48/*sequence_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // sequence_number ::= number 
            {
              string RESULT = null;
		int nleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int nright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string n = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 RESULT=n; 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(48/*sequence_number*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // status_list ::= status_list SP STATUS_ATT 
            {
              object RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.AddStatus(s); Console.WriteLine("status_att "+s); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(41/*status_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-2)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // status_list ::= STATUS_ATT 
            {
              object RESULT = null;
		int sleft = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left;
		int sright = ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right;
		string s = (string)((TUVienna.CS_CUP.Runtime.Symbol) CUP_parser_stack.elementAt(CUP_parser_top-0)).value;
		 ParseInt.command.AddStatus(s); Console.WriteLine("status_att "+s); 
              CUP_parser_result = new TUVienna.CS_CUP.Runtime.Symbol(41/*status_list*/, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).left, ((TUVienna.CS_CUP.Runtime.Symbol)CUP_parser_stack.elementAt(CUP_parser_top-0)).right, RESULT);
            }
          return CUP_parser_result;

          /* . . . . . .*/
          default:
            throw new System.Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

}
