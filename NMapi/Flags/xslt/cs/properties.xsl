<?xml version="1.0"?>
<!--
//
// openmapi.org - NMapi C# Mapi API - properties.xsl
//
// Copyright 2009 Topalis AG
//
// Author: Johannes Roith <johannes@jroith.de>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
//-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text" omit-xml-declaration="yes" />
<xsl:include href="../../../Data/xslt/common.xsl" />

<xsl:template match="/properties">
//
// DO NOT EDIT!
// This file was autogenerated.
//

using System;
using System.IO;

using NMapi;
using NMapi.Flags;
using NMapi.Events;
using NMapi.Properties;
using NMapi.Table;

namespace <xsl:value-of select="@namespace" /> {

	/// &lt;summary&gt;
	///  Contains the known property tag constants.
	/// &lt;/summary&gt;
	public static class <xsl:value-of select="@class" />
	{
		/// &lt;summary&gt;
		///  
		/// &lt;/summary&gt;
		public static class Typed
		{
			<xsl:for-each select="property">
				/// &lt;summary&gt;
				///  A strongly-typed '<xsl:value-of select="@name" />' property tag.
				/// &lt;/summary&gt;
				public static readonly 
					<xsl:call-template name="map-type"><xsl:with-param name="type" select="@type" /></xsl:call-template><xsl:text>PropertyTag </xsl:text>
					<xsl:value-of select="@name" /> = (<xsl:call-template name="map-type"><xsl:with-param name="type" select="@type" /></xsl:call-template>PropertyTag) 
					PropertyTag.CreatePropertyTag (<xsl:value-of select="parent::node()/@class" />.<xsl:value-of select="@name" />);			
			</xsl:for-each>
		}

		<xsl:for-each select="property">
			/// &lt;summary&gt;
			///  Constant 32-bit value representing the <xsl:value-of select="@name" /> property tag.
			/// &lt;/summary&gt;
			[MapiPropDef] public const int <xsl:value-of select="@name" /> =  ((int) PropertyType.<xsl:value-of select="@type" />) | 
			(<xsl:value-of select="@id" /> &lt;&lt; 16);		
		</xsl:for-each>
	}

}
</xsl:template>
</xsl:stylesheet>
