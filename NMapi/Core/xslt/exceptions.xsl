<?xml version="1.0"?>
<!--
//
// openmapi.org - OpenMapi Proxy Server - exceptions.xsl
//
// Copyright 2009 Topalis AG
//
// Author: Johannes Roith <johannes@jroith.de>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
//-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text" omit-xml-declaration="yes" />

<xsl:template match="/errors">
//
// DO NOT EDIT!
// This file was autogenerated.
//

using System;

using System.IO;
using System.Net.Sockets;
using CompactTeaSharp;
using NMapi.Flags;

using System.ServiceModel;
using System.Runtime.Serialization;
using System.Security.Permissions;

namespace NMapi {

	<xsl:apply-templates select="error" />
	
	public partial class MapiException
	{
	
		public static MapiException Make (string msg, int error)
		{
			switch (error) {
				<xsl:for-each select="error">
					case Error.<xsl:value-of select="@name" />: return new Mapi<xsl:value-of select="@name" />Exception (msg);
				</xsl:for-each>
				default: throw new MapiCallFailedException ("Unknown error code '" + error.ToString ("X") + "' ! Should not happen!");
			}
		}
		
		// TODO: we should call an xslt-function here.
		
		public static MapiException Make (int error)
		{
			switch (error) {
				<xsl:for-each select="error">
					case Error.<xsl:value-of select="@name" />: return new Mapi<xsl:value-of select="@name" />Exception ();
				</xsl:for-each>
				default: throw new MapiCallFailedException ("Unknown error code '" + error.ToString ("X") + "' ! Should not happen!");
			}
		}		
	}
	
}
</xsl:template>

<xsl:template match="error">
	
	/// &lt;summary&gt;
	///  Exception for the MAPI-Error <xsl:value-of select="@name" />.
	/// &lt;/summary&gt;
	[Serializable]
	public partial class Mapi<xsl:value-of select="@name" />Exception : MapiException
	{

		/// &lt;summary&gt;
		///  Creates a new Mapi<xsl:value-of select="@name" />Exception.
		/// &lt;/summary&gt;
		public Mapi<xsl:value-of select="@name" />Exception () : base (Error.<xsl:value-of select="@name" />)
		{
		}

		/// &lt;summary&gt;
		///  Creates a new Mapi<xsl:value-of select="@name" />Exception with a custom message.
		/// &lt;/summary&gt;
		public Mapi<xsl:value-of select="@name" />Exception (string msg) : base (msg, Error.<xsl:value-of select="@name" />)
		{
		}
		
	}
	
</xsl:template>

</xsl:stylesheet>